<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hnist.graduation.mapped.UploadMapper" >
  <resultMap id="BaseResultMap" type="com.hnist.graduation.entity.Upload" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="FILEID" property="fileid" jdbcType="VARCHAR" />
    <result column="TITLE" property="title" jdbcType="VARCHAR" />
    <result column="URL" property="url" jdbcType="VARCHAR" />
    <result column="FROM" property="from" jdbcType="VARCHAR" />
    <result column="ADDTIME" property="addtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, FILEID, TITLE, URL, FROM, ADDTIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hnist.graduation.entity.UploadExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from upload
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from upload
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from upload
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hnist.graduation.entity.UploadExample" >
    delete from upload
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hnist.graduation.entity.Upload" >
    insert into upload (ID, FILEID, TITLE, 
      URL, FROM, ADDTIME
      )
    values (#{id,jdbcType=INTEGER}, #{fileid,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{from,jdbcType=VARCHAR}, #{addtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hnist.graduation.entity.Upload" >
    insert into upload
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="fileid != null" >
        FILEID,
      </if>
      <if test="title != null" >
        TITLE,
      </if>
      <if test="url != null" >
        URL,
      </if>
      <if test="from != null" >
        FROM,
      </if>
      <if test="addtime != null" >
        ADDTIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fileid != null" >
        #{fileid,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="from != null" >
        #{from,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hnist.graduation.entity.UploadExample" resultType="java.lang.Integer" >
    select count(*) from upload
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update upload
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fileid != null" >
        FILEID = #{record.fileid,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        TITLE = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null" >
        URL = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.from != null" >
        FROM = #{record.from,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null" >
        ADDTIME = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update upload
    set ID = #{record.id,jdbcType=INTEGER},
      FILEID = #{record.fileid,jdbcType=VARCHAR},
      TITLE = #{record.title,jdbcType=VARCHAR},
      URL = #{record.url,jdbcType=VARCHAR},
      FROM = #{record.from,jdbcType=VARCHAR},
      ADDTIME = #{record.addtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hnist.graduation.entity.Upload" >
    update upload
    <set >
      <if test="fileid != null" >
        FILEID = #{fileid,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        URL = #{url,jdbcType=VARCHAR},
      </if>
      <if test="from != null" >
        FROM = #{from,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        ADDTIME = #{addtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hnist.graduation.entity.Upload" >
    update upload
    set FILEID = #{fileid,jdbcType=VARCHAR},
      TITLE = #{title,jdbcType=VARCHAR},
      URL = #{url,jdbcType=VARCHAR},
      FROM = #{from,jdbcType=VARCHAR},
      ADDTIME = #{addtime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>